from tkinter import Y #standarta grafiskā (GUI) pakotne
import turtle
import math
# li = ["Kursa darbs!", "Tēma", "--"]
# for x in range(0, len(li)):
#     print(li[x])
screen = turtle.Screen()
# background color
screen.bgcolor("lightblue")
# turtle object
def SaulesZiimeejums(): #funkcija, lai izveidotu sauli
    y = turtle.Turtle()
    def drawFourRays(t, length, radius): #Funkcija funkcijā
        for i in range(4):
            t.penup()
            t.forward(radius)
            t.pendown()
            t.forward(length)
            t.penup()
            t.backward(length + radius)
            t.left(90)
    y.penup()
    y.goto(95, 120)
    y.fillcolor("yellow")
    y.pendown()
    y.begin_fill()
    y.circle(45)
    y.end_fill()
    # zimee saules starinus
    y.penup()
    y.goto(95, 179)
    y.pendown()
    drawFourRays(y, 95, 64)
    y.right(45)
    drawFourRays(y, 95, 64)
    y.left(45)
    
    
def MaajasZiimeejums(): #funkcija, lai izveidotu māju
    z = turtle.Turtle()
    z.penup()
    z.goto(145, 170)
    z.color("black")
    z.shape("turtle")
    z.speed(2)
    # majas pirmais stvas/pamats
    z.fillcolor('black')
    z.begin_fill()
    z.right(90)
    z.forward(250)
    z.left(90)
    z.forward(400)
    z.left(90)
    z.forward(250)
    z.left(90)
    z.forward(400)
    z.right(90)
    z.end_fill()
    # majas jumta dala
    z.fillcolor('red')
    z.begin_fill()
    z.right(45)
    z.forward(282)
    z.right(90)
    z.forward(282)
    z.right(45)
    z.end_fill()
    # logu zimejums
    z.right(90)
    z.forward(400)
    z.left(90)
    z.forward(50)
    z.left(90)
    z.forward(150)
    z.right(90)
    z.forward(200)
    z.right(180)
    z.forward(200)
    z.fillcolor('white')
    z.begin_fill()
    z.right(90)
    z.forward(200)
    z.right(90)
    z.forward(150)
    z.right(90)
    z.forward(200)
    z.right(90)
    z.forward(150)
    z.right(90)
    z.forward(100)
    z.end_fill()
    z.right(90)
    z.forward(150)
    z.right(90)
    z.forward(100)
    z.right(90)
    z.forward(75)
    z.right(90)
    z.forward(200)
    z.right(180)
    z.forward(200)
    # durvju ziimejums
    z.right(90)
    z.forward(75)
    z.left(90)
    z.forward(15)
    z.left(90)
    z.forward(200)
    z.right(90)
    z.forward(15)
    z.right(90)
    z.forward(75)
    z.fillcolor('brown')
    z.begin_fill()
    z.circle(10)
    z.end_fill()
    z.forward(120)
def KokaZiimeejums():
    def drawRectangle(t, width, height, color):
        t.fillcolor(color)
        t.begin_fill()
        t.forward(width)
        t.left(90)
        t.forward(height)
        t.left(90)
        t.forward(width)
        t.left(90)
        t.forward(height)
        t.left(90)
        t.end_fill()
    # lai uzzimetu trijsturi
    def drawTriangle(t, length, color):
        t.fillcolor(color)
        t.begin_fill()
        t.forward(length)
        t.left(135)
        t.forward(length / math.sqrt(2))
        t.left(90)
        t.forward(length / math.sqrt(2))
        t.left(135)
        t.end_fill()
        # izveido turtle
    tip = turtle.Turtle()
    tip.color ("black")
    tip.shape ("turtle")
    tip.speed (2)
    # koka celms
    tip.penup()
    tip.goto(-100, -130)
    tip.pendown()
    drawRectangle(tip, 20, 40, "brown")
    # koka augsdalas
    tip.penup()
    tip.goto(-135, -90)
    tip.pendown()
    drawTriangle(tip, 90, "lightgreen")
    tip.penup()
    tip.goto(-130, -45)
    tip.pendown()
    drawTriangle(tip, 80, "lightgreen")
    tip.penup()
    tip.goto(-125, -5)
    tip.pendown()
    drawTriangle(tip, 70, "lightgreen")
    tip.penup()

izveeleetie = [] #lists ir tukss
while True:
    try: # testee prieks error
        opcija = int(input("Izvēlieties opcijas\n1 Saule\n2 Māja\n3 Koks\n"))
        if opcija == 1:
            izveeleetie.append("Sauli")#pievieno sauli "izveleties" listam un peecaak pievieno to arii text documentam
            SaulesZiimeejums()
        if opcija == 2:
            izveeleetie.append("Māju")
            MaajasZiimeejums()
        if opcija == 3:
            izveeleetie.append("Koku")
            KokaZiimeejums()
    except: print("Ievadiet skaitli!")
    izvele = str(input("Vai turpināt zīmēšanu?\nY Jā \nN Nē"))
    if izvele == "N" or izvele == "n": break
fails = open("Rezultati.txt", "w", encoding='utf-8')
fails.write("Lietotajs izvelejas: ")
for x in range(len(izveeleetie)): #izpildaas tik reizes cik ciklaa izveletie dati
    fails.write(f"{izveeleetie[x]}, ")  #velak ieraksta tekstu no izveleta sarksta
fails.close()
